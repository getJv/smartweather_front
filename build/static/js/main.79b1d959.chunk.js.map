{"version":3,"sources":["App.js","serviceWorker.js","components/SearchInputComponent.js","components/ErroHandler.js","components/SearchFormComponent.js","components/MapComponent.js","components/GridComponent.js","components/WeatherBoxComponent.js","index.js"],"names":["App","react_default","a","createElement","id","href","className","Link","to","this","props","children","Component","Boolean","window","location","hostname","match","SearchInputComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","errorMessage","assign","required","PubSub","subscribe","stream","err","setState","message","bind","TratadorErros","publish","SearchFormComponent","querySearch","sentForm","assertThisInitialized","setQueryString","getApiData","$","ajax","url","dataType","success","newWeatherData","error","ErroHandler","responseJSON","beforeSend","event","preventDefault","target","value","onSubmit","method","SearchInputComponent_SearchInputComponent","placeholder","type","name","onChange","MapComponent","handleMarkerClick","_ref","payload","anchor","console","log","concat","points","_this2","data","lat","lon","lib_react_default","center","zoom","height","pigeon_marker_lib_react_default","onClick","GridComponent","list","forecast","forecastday","map","item","key","date","Card_default","CardActionArea_default","src","day","condition","icon","alt","text","Date","toDateString","CardContent_default","Typography_default","gutterBottom","variant","component","avgtemp_c","CardActions_default","Button_default","size","color","WeatherBox","weatherData","SearchFormComponent_SearchFormComponent","MapComponent_MapComponent","GridComponent_GridComponent","ReactDOM","render","BrowserRouter","src_App","Route","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79b1d959.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './css/pure-min.css';\r\nimport './css/side-menu.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"layout\">\r\n\r\n                <a href=\"#menu\" id=\"menuLink\" className=\"menu-link\">\r\n\r\n                    <span></span>\r\n                </a>\r\n\r\n                <div id=\"menu\">\r\n                    <div className=\"pure-menu\">\r\n                        <Link className=\"pure-menu-heading\" to=\"/\">Menu</Link>\r\n\r\n                        <ul className=\"pure-menu-list\">\r\n                            <li className=\"pure-menu-item menu-item-divided pure-menu-selected\">\r\n                                <Link to=\"/\" className=\"pure-menu-link\">Home</Link>\r\n                            </li>\r\n\r\n                            <li className=\"pure-menu-item\"><Link to=\"/about\" className=\"pure-menu-link\">About</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"main\">\r\n                    <div className=\"header\">\r\n                        <h1>Smart Weather</h1>\r\n                        <h2>The better way to check the weather</h2>\r\n                    </div>\r\n\r\n                    <div className=\"content\">\r\n                        <br />\r\n                        {this.props.children}\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default class SearchInputComponent extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {errorMessage:''};\r\n    }\r\n \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pure-control-group\">\r\n                <input className=\"pure-input-1\"\r\n                    required \r\n                    {...this.props}\r\n                />\r\n                <span className=\"error\">{this.state.errorMessage}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        PubSub.subscribe('errorValidationStream',function(stream,err){\r\n            this.setState({errorMessage:err.message});\r\n        }.bind(this));   \r\n        \r\n        PubSub.subscribe('cleanerStream',function(stream){\r\n            this.setState({errorMessage:''});\r\n        }.bind(this));    \r\n        \r\n\r\n    }\r\n\r\n\r\n}","import PubSub from 'pubsub-js';\r\n\r\nexport default class TratadorErros {\r\n    error(err){  \r\n        PubSub.publish(\"errorValidationStream\",err);\r\n    }\r\n  }\r\n","import React, { Component } from 'react';\r\nimport SearchInputComponent from './SearchInputComponent';\r\nimport $ from 'jquery';\r\nimport PubSub from 'pubsub-js';\r\nimport ErroHandler from './ErroHandler';\r\n\r\nconst URL_API = \"http://localhost:8080/weather/\";\r\n\r\nexport default class SearchFormComponent extends Component {\r\n\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { querySearch: \"\" };\r\n        this.sentForm = this.sentForm.bind(this);\r\n        this.setQueryString = this.setQueryString.bind(this);\r\n        this.getApiData = this.getApiData.bind(this);\r\n\r\n    }\r\n\r\n    getApiData() {\r\n        $.ajax({\r\n            url: URL_API + this.state.querySearch,\r\n            dataType: 'json',\r\n            success: newWeatherData => {\r\n               \r\n               PubSub.publish('newWeatherDataStream', newWeatherData)\r\n            },\r\n            error: err => {\r\n                new ErroHandler().error(err.responseJSON)\r\n            },\r\n            beforeSend: ()=>{\r\n                PubSub.publish('cleanerStream', {})\r\n            }\r\n        });\r\n    }\r\n\r\n    sentForm(event) {\r\n        event.preventDefault();\r\n        this.getApiData()\r\n\r\n    }\r\n\r\n    setQueryString(event) {\r\n        this.setState({ querySearch: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pure-u-1\">\r\n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.sentForm} method=\"post\">\r\n                    <SearchInputComponent\r\n                        id=\"location\"\r\n                        placeholder=\"What is your location?\"\r\n                        type=\"text\"\r\n                        name=\"location\"\r\n                        value={this.state.querySearch}\r\n                        onChange={this.setQueryString}\r\n                    />\r\n                </form>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport Map from 'pigeon-maps'\r\nimport Marker from 'pigeon-marker'\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default class MapComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { points: [-15.78, -47.92] };\r\n    }\r\n\r\n    handleMarkerClick = ({ event, payload, anchor }) => {\r\n        console.log(`Marker #${payload} clicked at: `, anchor)\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        PubSub.subscribe('newWeatherDataStream', (stream, data) => {\r\n\r\n            if (data.location)\r\n                this.setState({ points: [data.location.lat, data.location.lon] });\r\n\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"pure-g\">\r\n                <div className=\"pure-u-1\" >\r\n                    <Map center={this.state.points}\r\n                        zoom={12}\r\n                        height={150}>\r\n                        <Marker anchor={this.state.points} payload={1} onClick={this.handleMarkerClick} />\r\n                    </Map>\r\n\r\n                    {}\r\n\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default class GridComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { list: this.props.data.forecast.forecastday }\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        this.setState({ list: this.props.data.forecast.forecastday })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"pure-g\">\r\n                     {\r\n\r\nthis.state.list.map((item) => {\r\n    return (\r\n        <div key={item.date} className=\"pure-u-1-2\">\r\n            <Card >\r\n                <CardActionArea>\r\n                    <img src={item.day.condition.icon} alt={item.day.condition.text} />\r\n                    {new Date(item.date + \"T00:00:00\").toDateString()}\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h5\">\r\n                            {item.day.condition.text}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            Temperature : {item.day.avgtemp_c} <small>(avg celsius)</small>\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            Preciptation: {item.day.avgtemp_c} <small>(avg mm)</small>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Share\r\n</Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Learn More\r\n</Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n\r\n\r\n    );\r\n})\r\n\r\n}\r\n               \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport SearchFormComponent from './SearchFormComponent';\r\nimport MapComponent from './MapComponent';\r\nimport GridComponent from './GridComponent';\r\n\r\nimport PubSub from 'pubsub-js';\r\n\r\n\r\nexport default class WeatherBox extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {  weatherData: {} };\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n\r\n\r\n\r\n        PubSub.subscribe('newWeatherDataStream', (stream, data) => {\r\n\r\n            this.setState({ weatherData: data });\r\n                \r\n\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        PubSub.subscribe('cleanerStream',function(stream){\r\n            this.setState({weatherData:{}});\r\n        }.bind(this)); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <SearchFormComponent />\r\n                <MapComponent />\r\n                { this.state.weatherData.forecast ?  <GridComponent data={this.state.weatherData} /> : null }\r\n            \r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n//import AboutBox from './components/AboutComponent';\r\nimport WeatherBox from './components/WeatherBoxComponent';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App>\r\n            <Route exact  path=\"/\" component={WeatherBox } ></Route>\r\n            <Route path=\"/about\"  ></Route>\r\n        </App>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}